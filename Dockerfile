# Use an official Ubuntu as a parent image
FROM ubuntu:22.04

# Set the working directory to home
WORKDIR /home

# Install all the required dependencies 
RUN apt-get update && \
    apt-get install -y build-essential git wget gcc-i686-linux-gnu g++-i686-linux-gnu \
    bison gawk vim libxml2 python3 curl gcc cmake

# Clone the Lind-wasm repository
# RUN git clone --recurse-submodules https://github.com/Lind-Project/lind-wasm.git
COPY . /home/lind-wasm

# Install Rust
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y && \
    . "$HOME/.cargo/env" && \
    rustup install nightly && \
    rustup default nightly

# Ensure the Rust environment is available in future RUN instructions
ENV PATH="/root/.cargo/bin:${PATH}"

# Install clang-16 for compiling the code
RUN wget https://github.com/llvm/llvm-project/releases/download/llvmorg-16.0.4/clang+llvm-16.0.4-x86_64-linux-gnu-ubuntu-22.04.tar.xz && \
    tar -xf clang+llvm-16.0.4-x86_64-linux-gnu-ubuntu-22.04.tar.xz

# WORKDIR /home/lind-wasm
# RUN git submodule update --init --recursive

# Go inside lind-wasm/glibc and switch to main branch
# WORKDIR /home/lind-wasm/glibc
# RUN git switch add_syscall_merge

# Move wasi directory
RUN mv /home/lind-wasm/glibc/wasi /home/clang+llvm-16.0.4-x86_64-linux-gnu-ubuntu-22.04/lib/clang/16/lib

# Configure glibc for WASI
# Build glibc
WORKDIR /home/lind-wasm/glibc
RUN ./wasm-config.sh && \
    cd build && \
    make --keep-going -j4 || true

RUN make install --keep-going || true

# Modify stubs.h
RUN cd /home/lind-wasm/glibc/target/include/gnu && \
    rm -r stubs.h && \
    echo '/* This file is automatically generated. This file selects the right generated file of `__stub_FUNCTION` macros based on the architecture being compiled for. */\n#if defined __x86_64__ && defined __LP64__\n# include <gnu/stubs-64.h>\n#endif\n#if defined __x86_64__ && defined __ILP32__\n# include <gnu/stubs-x32.h>\n#endif\n' > stubs.h && \
    chmod +x stubs.h

# Generate wasm sysroot
RUN ./gen_sysroot.sh

WORKDIR /home/lind-wasm/RawPOSIX
RUN cargo build

WORKDIR /home/lind-wasm
RUN tar -xvf binaryen-version_119-x86_64-linux.tar.gz

ENV PATH="/root/bin:$PATH"
ENV PATH="/root/.local/bin:$PATH"
ENV PATH="/home/lind-wasm:$PATH"
ENV PATH="/home/lind-wasm/glibc/build/install/bin:$PATH"
ENV PATH="/home/lind-wasm/binaryen-version_119/bin:$PATH"
ENV PATH="/home/clang+llvm-16.0.4-x86_64-linux-gnu-ubuntu-22.04/bin:$PATH"
ENV PATH="/home/clang+llvm-16.0.4-x86_64-linux-gnu-ubuntu-22.04/lib/clang/16/bin:$PATH"
ENV LD_LIBRARY_PATH="/home/lind-wasm/wasmtime/crates/rustposix"


# Build and run wasmtime
WORKDIR /home/lind-wasm/wasmtime
RUN cd /home/lind-wasm/wasmtime/crates/rustposix/src && \
    rm -r build.rs && \
    echo 'fn main() { println!("cargo:rustc-link-search=native=/home/lind-wasm/wasmtime/crates/rustposix"); println!("cargo:rustc-link-lib=dylib=rustposix"); }' > build.rs && \
    chmod +x build.rs && \
    cd /home/lind-wasm/wasmtime && \
    cargo build

# Set the working directory to home
WORKDIR /home/lind-wasm
RUN chmod +x lindtool.sh